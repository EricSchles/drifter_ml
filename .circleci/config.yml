# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: Install python
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python -m pip install pytest --user
      - run:
          name: Install library
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pytest tests
      - run:
          name: Install codecov
          command: |
            . venv/bin/activate
            python -m pip install codecov pytest-cov 
            cd tests && pytest --cov-report xml --cov=drifter_ml ./*
      - run: 
          name: run codecov
          command: |
            curl -s https://codecov.io/bash | bash -s - -t 6875d787-f809-4e64-909b-c672e8845796        
      - store_artifacts:
          path: ./tests/htmlcov
          destination: ./tests/htmlcov
